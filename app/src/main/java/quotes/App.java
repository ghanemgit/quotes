/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;
import com.google.gson.stream.JsonReader;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;


public class App {

    public static void main(String[] args) throws Exception {

        Gson gson = new Gson();
        Quotes quotes;
        String oneQuote = "";
        Reader reader = new FileReader("quotes.json");

        File offlineJsonFile = new File("quotes.json");

        try {

            URL quoteUrl = new URL("https://favqs.com/api/qotd");

            HttpURLConnection quoteHttpURLConnection = (HttpURLConnection) quoteUrl.openConnection();

            quoteHttpURLConnection.setRequestMethod("GET");

            InputStreamReader quoteInputStreamReader = new InputStreamReader(quoteHttpURLConnection.getInputStream());


            BufferedReader quoteBufferedReader = new BufferedReader(quoteInputStreamReader);
            oneQuote = quoteBufferedReader.readLine();




            Quote fromJsonQuote = gson.fromJson(oneQuote, Quote.class);
            System.out.println(fromJsonQuote);

        } catch (Exception e) {

            System.err.println("Sorry, something went wrong");

            //To print quote in offline case

            JsonReader reader1 = new JsonReader(reader);

            JsonArray array = JsonParser.parseReader(reader1).getAsJsonArray();

            int randomIndex = (int) Math.floor(Math.random() * (137));

            quotes = gson.fromJson(array.get(randomIndex), Quotes.class);

            System.out.println(quotes.author);
            System.out.println(quotes.likes);
            System.out.println(quotes.text);
        }


        //append new quote to local file if connection true.
        try (FileWriter offlineJsonFileWriter = new FileWriter(offlineJsonFile,true)){

                BufferedWriter bufferedWriter = new BufferedWriter(offlineJsonFileWriter);
                bufferedWriter.write(oneQuote);
                bufferedWriter.newLine();
                bufferedWriter.close();

        }


    }
}


///////////////////////////////////////////////////Lab08\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//Gson gson = new Gson();
//    Quotes quotes;
//
//    Reader reader = new FileReader("quotes.json");
//    JsonReader reader1 = new JsonReader(reader);
//
//    JsonArray array = JsonParser.parseReader(reader1).getAsJsonArray();
//    //System.out.println(array.size());
//    int randomIndex = (int) Math.floor(Math.random()*(137));
//
//        quotes = gson.fromJson(array.get(randomIndex),Quotes.class);
//
//        System.out.println(quotes.author);
//        System.out.println(quotes.likes);
//        System.out.println(quotes.text);