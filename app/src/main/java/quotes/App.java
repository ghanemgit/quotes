/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.collect.Lists;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;
import com.google.gson.stream.JsonReader;

import java.io.*;


public class App {
    public static void main(String[] args) throws FileNotFoundException {

        Gson gson = new Gson();
        Quotes quotes;

        Reader reader = new FileReader("quotes.json");
        JsonReader reader1 = new JsonReader(reader);

        JsonArray array = JsonParser.parseReader(reader1).getAsJsonArray();
        System.out.println(array.size());
        int randomIndex = (int) Math.floor(Math.random()*(137));

        quotes = gson.fromJson(array.get(randomIndex),Quotes.class);

        System.out.println(quotes.author);
        System.out.println(quotes.likes);
        System.out.println(quotes.text);




    }
}


















////        String [] arr = new String[0];
////        Quotes quotes = new Quotes(arr,"Mohamamd ghanem",1500,"Hello world");
//        Gson gson = new Gson();
////        String myJson = gson.toJson(quotes);
////        System.out.println(myJson);
//        GsonBuilder gsonBuilder = new GsonBuilder();
////        Quotes myObj = gson.fromJson(myJson,Quotes.class);
////        System.out.println(myObj);
//
//        //System.out.println(quotes.jsonFileReader("quotes.json",quotes));
//
//        // File path is passed as parameter
//        File file = new File(
//                "quotes.json");
//
//        // Note:  Double backquote is to avoid compiler
//        // interpret words
//        // like \test as \t (ie. as a escape sequence)
//
//        // Creating an object of BufferedReader class
//        BufferedReader br
//                = new BufferedReader(new FileReader(file));
//
//        // Declaring a string variable
//        String st;
//        // Condition holds true till
//        // there is character in a string
//        String [] myObj;
//        while ((st = br.readLine()) != null)
//
//            // Print the string
//
//
//        myObj = gson.fromJson(st,String[].class);
